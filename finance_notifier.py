from typing import Optional

# ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ System Notification ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ plyer
try:
    from plyer import notification
    HAVE_PLYER = True
except Exception:
    HAVE_PLYER = False

import tkinter as tk
from tkinter import messagebox

def _format_money(amount: float, currency: str = "THB") -> str:
    """‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô"""
    try:
        return f"{amount:,.2f} {currency}"
    except Exception:
        return f"{amount} {currency}"

def _show_msgbox(title: str, message: str) -> None:
    """‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Tkinter (fallback)"""
    root = tk.Tk()
    root.withdraw()
    try:
        messagebox.showinfo(title, message, parent=root)
    finally:
        root.destroy()

def _notify(title: str, message: str, timeout_sec: int = 10) -> None:
    """
    ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ plyer: ‡πÉ‡∏ä‡πâ System Notification (‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏≠‡∏á‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ: ‡πÉ‡∏ä‡πâ messagebox (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î OK ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î)
    """
    if HAVE_PLYER:
        try:
            # ‡πÉ‡∏ä‡πâ System Notification ‡∏û‡∏£‡πâ‡∏≠‡∏° Timeout 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            notification.notify(title=title, message=message, timeout=timeout_sec)
            return
        except Exception:
            pass 
    
    # ‡∏ñ‡πâ‡∏≤ plyer ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ), ‡∏à‡∏∞‡πÉ‡∏ä‡πâ messagebox ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î timeout ‡πÑ‡∏î‡πâ
    _show_msgbox(title, message)

# ----------------------------------------------------------------------
# ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å ----------
# ----------------------------------------------------------------------

def notify_income(amount: float,
                  category: str,
                  note: Optional[str] = None, # üëà ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ
                  balance: Optional[float] = None,
                  currency: str = "THB") -> None:
    """
    ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠ '‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠)
    """
    title = "üí∞ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß"
    # üî¥ ‡∏•‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏≠‡∏≠‡∏Å
    msg = [f"‚úÖ ‡∏´‡∏°‡∏ß‡∏î: {category}", f"üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {_format_money(amount, currency)}"]
    
    if balance is not None:
        msg.append(f"üìä ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {_format_money(balance, currency)}")
        
    _notify(title, "\n".join(msg)) 

def notify_expense(amount: float,
                    category: str,
                    note: Optional[str] = None,
                    balance: Optional[float] = None,
                    currency: str = "THB") -> None:
    """
    ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠ '‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠)
    """
    title = "üí∏ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß"
    msg = [f"‚ùå ‡∏´‡∏°‡∏ß‡∏î: {category}", f"üìâ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {_format_money(amount, currency)}"]
    
    # üü¢ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
    if note:
        msg.append(f"üìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: {note}")
        
    if balance is not None:
        msg.append(f"üìä ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {_format_money(balance, currency)}")
        
    _notify(title, "\n".join(msg))

def notify_transaction(trx_type: str,
                        amount: float,
                        category: str,
                        note: Optional[str] = None,
                        balance: Optional[float] = None,
                        currency: str = "THB") -> None:
    """‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô generic"""
    if trx_type.lower() == "income":
        # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å notify_income ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
        return notify_income(amount, category, note, balance, currency)
    elif trx_type.lower() == "expense":
        return notify_expense(amount, category, note, balance, currency)
    
    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    title = "üì¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
    msg = [f"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: {trx_type}", f"‡∏´‡∏°‡∏ß‡∏î: {category}", f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {_format_money(amount, currency)}"]
    
    if note:
        msg.append(f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {note}")
        
    if balance is not None:
        msg.append(f"‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {_format_money(balance, currency)}")
        
    _notify(title, "\n".join(msg))