# finance_notifier.py (‡∏â‡∏ö‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏î‡πâ‡∏ß‡∏¢ Plyer)
from typing import Optional
import tkinter as tk
from tkinter import messagebox

# ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ System Notification ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ plyer
try:
    from plyer import notification
    HAVE_PLYER = True
    print("Plyer library found. System notifications will be used.")
except ImportError:
    HAVE_PLYER = False
    print("Plyer library not found. Falling back to tkinter messagebox.")

def _format_money(amount: float, currency: str = "THB") -> str:
    """‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô"""
    return f"{amount:,.2f} {currency}"

def _show_msgbox(title: str, message: str) -> None:
    """‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Tkinter (fallback)"""
    root = tk.Tk()
    root.withdraw()
    try:
        messagebox.showinfo(title, message, parent=root)
    finally:
        root.destroy()

def _notify(title: str, message: str, timeout_sec: int = 10) -> None:
    """
    ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ plyer: ‡πÉ‡∏ä‡πâ System Notification (‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏≠‡∏á‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ: ‡πÉ‡∏ä‡πâ messagebox (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î OK ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î)
    """
    if HAVE_PLYER:
        try:
            notification.notify(title=title, message=message, timeout=timeout_sec)
            return
        except Exception as e:
            print(f"Plyer notification failed: {e}. Falling back to messagebox.")
            pass
    _show_msgbox(title, message)

# ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢) ----------

def notify_income(amount: float, balance: Optional[float] = None):
    """
    ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ '‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    """
    title = "üí∞ Income Recorded"
    msg = [f"Amount: {_format_money(amount)}"]
    if balance is not None:
        msg.append(f"Current Balance: {_format_money(balance)}")
    _notify(title, "\n".join(msg))

def notify_expense(amount: float, category: str, note: Optional[str] = None, balance: Optional[float] = None):
    """
    ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ '‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    """
    title = "üí∏ Expense Recorded"
    msg = [f"Category: {category}", f"Amount: {_format_money(amount)}"]
    if note:
        msg.append(f"Item: {note}") # ‡πÉ‡∏ä‡πâ 'Item' ‡∏´‡∏£‡∏∑‡∏≠ 'Description' ‡∏Å‡πá‡πÑ‡∏î‡πâ
    if balance is not None:
        msg.append(f"Current Balance: {_format_money(balance)}")
    _notify(title, "\n".join(msg))